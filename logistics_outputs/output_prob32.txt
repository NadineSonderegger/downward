INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/nadso/thesis/downward/builds/release/bin/translate/translate.py downward-benchmarks/logistics98/domain.pddl downward-benchmarks/logistics98/prob32.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.010s CPU, 0.002s wall-clock]
Generated 51 rules.
Computing model... [0.000s CPU, 0.005s wall-clock]
336 relevant atoms
369 auxiliary atoms
705 final queue length
820 total queue pushes
Completing instantiation... [0.000s CPU, 0.003s wall-clock]
Instantiating: [0.010s CPU, 0.013s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.010s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.003s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.000s CPU, 0.000s wall-clock]
Translating task: [0.000s CPU, 0.004s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
12 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.002s wall-clock]
Reordering and filtering variables...
10 of 12 variables necessary.
0 of 12 mutex groups necessary.
108 of 168 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 10
Translator derived variables: 0
Translator facts: 54
Translator goal facts: 3
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 108
Translator axioms: 0
Translator task size: 481
Translator peak memory: 31092 KB
Writing output... [0.010s CPU, 0.001s wall-clock]
Done! [0.030s CPU, 0.027s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/nadso/thesis/downward/builds/release/bin/downward --search 'eager_greedy([logistics_heuristic()])' --internal-plan-file sas_plan < output.sas
[t=0.000135s, 10888 KB] reading input...
[t=0.000784s, 10888 KB] done reading input!
[t=0.003051s, 11144 KB] Building successor generator...done!
[t=0.003247s, 11144 KB] peak memory difference for successor generator creation: 0 KB
[t=0.003276s, 11144 KB] time for successor generation creation: 0.000066s
[t=0.003308s, 11144 KB] Variables: 10
[t=0.003338s, 11144 KB] FactPairs: 54
[t=0.003366s, 11144 KB] Bytes per state: 4
[t=0.003408s, 11144 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.003449s, 11144 KB] New best heuristic value for logistics heuristic: 32
[t=0.003478s, 11144 KB] g=0, 1 evaluated, 0 expanded
[t=0.003510s, 11144 KB] Initial heuristic value for logistics heuristic: 32
[t=0.003538s, 11144 KB] pruning method: none
[t=0.003579s, 11144 KB] New best heuristic value for logistics heuristic: 30
[t=0.003610s, 11144 KB] g=1, 4 evaluated, 1 expanded
[t=0.003658s, 11144 KB] New best heuristic value for logistics heuristic: 29
[t=0.003699s, 11144 KB] g=2, 14 evaluated, 2 expanded
[t=0.003733s, 11144 KB] New best heuristic value for logistics heuristic: 28
[t=0.003763s, 11144 KB] g=2, 16 evaluated, 2 expanded
[t=0.003808s, 11144 KB] New best heuristic value for logistics heuristic: 27
[t=0.003838s, 11144 KB] g=3, 24 evaluated, 3 expanded
[t=0.003886s, 11144 KB] New best heuristic value for logistics heuristic: 26
[t=0.003915s, 11144 KB] g=4, 33 evaluated, 4 expanded
[t=0.003959s, 11144 KB] New best heuristic value for logistics heuristic: 25
[t=0.003988s, 11144 KB] g=5, 43 evaluated, 5 expanded
[t=0.004034s, 11144 KB] New best heuristic value for logistics heuristic: 24
[t=0.004064s, 11144 KB] g=6, 55 evaluated, 6 expanded
[t=0.004127s, 11144 KB] New best heuristic value for logistics heuristic: 22
[t=0.004156s, 11144 KB] g=7, 74 evaluated, 7 expanded
[t=0.004207s, 11144 KB] New best heuristic value for logistics heuristic: 21
[t=0.004237s, 11144 KB] g=8, 87 evaluated, 8 expanded
[t=0.004283s, 11144 KB] New best heuristic value for logistics heuristic: 20
[t=0.004313s, 11144 KB] g=9, 99 evaluated, 9 expanded
[t=0.004361s, 11144 KB] New best heuristic value for logistics heuristic: 19
[t=0.004390s, 11144 KB] g=10, 112 evaluated, 10 expanded
[t=0.004422s, 11144 KB] New best heuristic value for logistics heuristic: 18
[t=0.004450s, 11144 KB] g=10, 113 evaluated, 10 expanded
[t=0.004487s, 11144 KB] New best heuristic value for logistics heuristic: 17
[t=0.004558s, 11144 KB] g=11, 117 evaluated, 11 expanded
[t=0.004631s, 11144 KB] New best heuristic value for logistics heuristic: 16
[t=0.004662s, 11144 KB] g=12, 130 evaluated, 12 expanded
[t=0.004712s, 11144 KB] New best heuristic value for logistics heuristic: 15
[t=0.004742s, 11144 KB] g=13, 143 evaluated, 13 expanded
[t=0.004800s, 11144 KB] New best heuristic value for logistics heuristic: 14
[t=0.004830s, 11144 KB] g=14, 165 evaluated, 14 expanded
[t=0.004874s, 11144 KB] New best heuristic value for logistics heuristic: 13
[t=0.004904s, 11144 KB] g=15, 174 evaluated, 15 expanded
[t=0.004951s, 11144 KB] New best heuristic value for logistics heuristic: 12
[t=0.004980s, 11144 KB] g=16, 186 evaluated, 16 expanded
[t=0.005021s, 11144 KB] New best heuristic value for logistics heuristic: 11
[t=0.005051s, 11144 KB] g=17, 194 evaluated, 17 expanded
[t=0.005096s, 11144 KB] New best heuristic value for logistics heuristic: 9
[t=0.005125s, 11144 KB] g=18, 205 evaluated, 18 expanded
[t=0.005167s, 11144 KB] New best heuristic value for logistics heuristic: 8
[t=0.005197s, 11144 KB] g=19, 213 evaluated, 19 expanded
[t=0.005240s, 11144 KB] New best heuristic value for logistics heuristic: 7
[t=0.005270s, 11144 KB] g=20, 223 evaluated, 20 expanded
[t=0.005314s, 11144 KB] New best heuristic value for logistics heuristic: 6
[t=0.005378s, 11144 KB] g=21, 234 evaluated, 21 expanded
[t=0.005425s, 11144 KB] New best heuristic value for logistics heuristic: 5
[t=0.005455s, 11144 KB] g=22, 248 evaluated, 22 expanded
[t=0.005529s, 11144 KB] New best heuristic value for logistics heuristic: 0
[t=0.005559s, 11144 KB] g=23, 259 evaluated, 23 expanded
[t=0.005588s, 11144 KB] Solution found!
[t=0.005618s, 11144 KB] Actual search time: 0.002076s
load-truck package5 truck5 city2-1 (1)
load-truck package3 truck4 city1-1 (1)
drive-truck truck5 city2-1 city2-2 city2 (1)
unload-truck package5 truck5 city2-2 (1)
drive-truck truck4 city1-1 city1-2 city1 (1)
unload-truck package3 truck4 city1-2 (1)
fly-airplane plane1 city3-2 city1-2 (1)
load-airplane package4 plane1 city1-2 (1)
fly-airplane plane1 city1-2 city2-2 (1)
unload-airplane package4 plane1 city2-2 (1)
load-truck package4 truck5 city2-2 (1)
drive-truck truck5 city2-2 city2-1 city2 (1)
unload-truck package4 truck5 city2-1 (1)
load-airplane package5 plane1 city2-2 (1)
fly-airplane plane1 city2-2 city1-2 (1)
load-airplane package3 plane1 city1-2 (1)
fly-airplane plane1 city1-2 city2-2 (1)
unload-airplane package3 plane1 city2-2 (1)
load-truck package3 truck1 city2-2 (1)
drive-truck truck1 city2-2 city2-1 city2 (1)
unload-truck package3 truck1 city2-1 (1)
fly-airplane plane1 city2-2 city3-2 (1)
unload-airplane package5 plane1 city3-2 (1)
[t=0.005650s, 11144 KB] Plan length: 23 step(s).
[t=0.005650s, 11144 KB] Plan cost: 23
[t=0.005650s, 11144 KB] Expanded 24 state(s).
[t=0.005650s, 11144 KB] Reopened 0 state(s).
[t=0.005650s, 11144 KB] Evaluated 259 state(s).
[t=0.005650s, 11144 KB] Evaluations: 259
[t=0.005650s, 11144 KB] Generated 291 state(s).
[t=0.005650s, 11144 KB] Dead ends: 0 state(s).
[t=0.005650s, 11144 KB] Number of registered states: 259
[t=0.005650s, 11144 KB] Int hash set load factor: 259/512 = 0.505859
[t=0.005650s, 11144 KB] Int hash set resizes: 9
[t=0.005650s, 11144 KB] Search time: 0.002243s
[t=0.005650s, 11144 KB] Total time: 0.005650s
Solution found.
Peak memory: 11144 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.29s
