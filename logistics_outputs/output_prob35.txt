INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/nadso/thesis/downward/builds/release/bin/translate/translate.py downward-benchmarks/logistics98/domain.pddl downward-benchmarks/logistics98/prob35.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 51 rules.
Computing model... [0.010s CPU, 0.016s wall-clock]
1174 relevant atoms
1213 auxiliary atoms
2387 final queue length
2884 total queue pushes
Completing instantiation... [0.020s CPU, 0.017s wall-clock]
Instantiating: [0.040s CPU, 0.039s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.003s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.020s CPU, 0.023s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
21 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
21 of 21 variables necessary.
0 of 21 mutex groups necessary.
676 of 676 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.003s wall-clock]
Translator variables: 21
Translator derived variables: 0
Translator facts: 253
Translator goal facts: 5
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 676
Translator axioms: 0
Translator task size: 2837
Translator peak memory: 33180 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.100s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/nadso/thesis/downward/builds/release/bin/downward --search 'eager_greedy([logistics_heuristic()])' --internal-plan-file sas_plan < output.sas
[t=0.000228s, 10888 KB] reading input...
[t=0.005143s, 11012 KB] done reading input!
[t=0.009534s, 11408 KB] Building successor generator...done!
[t=0.010123s, 11408 KB] peak memory difference for successor generator creation: 0 KB
[t=0.010157s, 11408 KB] time for successor generation creation: 0.000400s
[t=0.010193s, 11408 KB] Variables: 21
[t=0.010227s, 11408 KB] FactPairs: 253
[t=0.010258s, 11408 KB] Bytes per state: 8
[t=0.010304s, 11408 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.010350s, 11408 KB] New best heuristic value for logistics heuristic: 49
[t=0.010383s, 11408 KB] g=0, 1 evaluated, 0 expanded
[t=0.010417s, 11408 KB] Initial heuristic value for logistics heuristic: 49
[t=0.010449s, 11408 KB] pruning method: none
[t=0.010506s, 11408 KB] New best heuristic value for logistics heuristic: 48
[t=0.010543s, 11408 KB] g=1, 4 evaluated, 1 expanded
[t=0.010742s, 11408 KB] New best heuristic value for logistics heuristic: 47
[t=0.010779s, 11408 KB] g=2, 44 evaluated, 2 expanded
[t=0.010956s, 11408 KB] New best heuristic value for logistics heuristic: 46
[t=0.010990s, 11408 KB] g=3, 83 evaluated, 3 expanded
[t=0.011239s, 11408 KB] New best heuristic value for logistics heuristic: 45
[t=0.011284s, 11408 KB] g=4, 130 evaluated, 4 expanded
[t=0.011457s, 11408 KB] New best heuristic value for logistics heuristic: 44
[t=0.011492s, 11408 KB] g=5, 169 evaluated, 5 expanded
[t=0.011660s, 11408 KB] New best heuristic value for logistics heuristic: 42
[t=0.011696s, 11408 KB] g=6, 207 evaluated, 6 expanded
[t=0.011881s, 11408 KB] New best heuristic value for logistics heuristic: 41
[t=0.011916s, 11408 KB] g=7, 251 evaluated, 7 expanded
[t=0.012125s, 11408 KB] New best heuristic value for logistics heuristic: 40
[t=0.012159s, 11408 KB] g=8, 291 evaluated, 8 expanded
[t=0.012339s, 11408 KB] New best heuristic value for logistics heuristic: 39
[t=0.012374s, 11408 KB] g=9, 332 evaluated, 9 expanded
[t=0.012550s, 11408 KB] New best heuristic value for logistics heuristic: 38
[t=0.012585s, 11408 KB] g=10, 372 evaluated, 10 expanded
[t=0.012840s, 11408 KB] New best heuristic value for logistics heuristic: 37
[t=0.012882s, 11408 KB] g=11, 425 evaluated, 11 expanded
[t=0.013090s, 11408 KB] New best heuristic value for logistics heuristic: 36
[t=0.013139s, 11408 KB] g=12, 465 evaluated, 12 expanded
[t=0.013333s, 11408 KB] New best heuristic value for logistics heuristic: 35
[t=0.013369s, 11408 KB] g=13, 507 evaluated, 13 expanded
[t=0.013624s, 11408 KB] New best heuristic value for logistics heuristic: 33
[t=0.013660s, 11408 KB] g=14, 550 evaluated, 14 expanded
[t=0.013853s, 11408 KB] New best heuristic value for logistics heuristic: 32
[t=0.013888s, 11408 KB] g=15, 592 evaluated, 15 expanded
[t=0.014083s, 11408 KB] New best heuristic value for logistics heuristic: 31
[t=0.014118s, 11408 KB] g=16, 636 evaluated, 16 expanded
[t=0.014350s, 11408 KB] New best heuristic value for logistics heuristic: 30
[t=0.014386s, 11408 KB] g=17, 692 evaluated, 17 expanded
[t=0.014542s, 11408 KB] New best heuristic value for logistics heuristic: 29
[t=0.014577s, 11408 KB] g=18, 727 evaluated, 18 expanded
[t=0.014765s, 11408 KB] New best heuristic value for logistics heuristic: 28
[t=0.014800s, 11408 KB] g=19, 770 evaluated, 19 expanded
[t=0.014948s, 11408 KB] New best heuristic value for logistics heuristic: 27
[t=0.014983s, 11408 KB] g=20, 804 evaluated, 20 expanded
[t=0.015196s, 11408 KB] New best heuristic value for logistics heuristic: 26
[t=0.015245s, 11408 KB] g=21, 847 evaluated, 21 expanded
[t=0.015402s, 11408 KB] New best heuristic value for logistics heuristic: 25
[t=0.015436s, 11408 KB] g=22, 883 evaluated, 22 expanded
[t=0.015473s, 11408 KB] New best heuristic value for logistics heuristic: 24
[t=0.015506s, 11408 KB] g=22, 884 evaluated, 22 expanded
[t=0.015665s, 11408 KB] New best heuristic value for logistics heuristic: 19
[t=0.015700s, 11408 KB] g=23, 921 evaluated, 23 expanded
[t=0.015875s, 11408 KB] New best heuristic value for logistics heuristic: 14
[t=0.015910s, 11408 KB] g=24, 964 evaluated, 24 expanded
[t=0.016065s, 11408 KB] New best heuristic value for logistics heuristic: 13
[t=0.016099s, 11408 KB] g=25, 1001 evaluated, 25 expanded
[t=0.016389s, 11408 KB] New best heuristic value for logistics heuristic: 12
[t=0.016429s, 11408 KB] g=26, 1039 evaluated, 26 expanded
[t=0.016642s, 11408 KB] New best heuristic value for logistics heuristic: 11
[t=0.016692s, 11408 KB] g=27, 1074 evaluated, 27 expanded
[t=0.016893s, 11408 KB] New best heuristic value for logistics heuristic: 6
[t=0.016932s, 11408 KB] g=28, 1112 evaluated, 28 expanded
[t=0.017122s, 11408 KB] New best heuristic value for logistics heuristic: 5
[t=0.017170s, 11408 KB] g=29, 1151 evaluated, 29 expanded
[t=0.017319s, 11408 KB] New best heuristic value for logistics heuristic: 0
[t=0.017354s, 11408 KB] g=30, 1185 evaluated, 30 expanded
[t=0.017386s, 11408 KB] Solution found!
[t=0.017420s, 11408 KB] Actual search time: 0.006965s
load-truck package1 truck9 city2-1 (1)
drive-truck truck9 city2-1 city2-3 city2 (1)
unload-truck package1 truck9 city2-3 (1)
load-truck package5 truck6 city3-2 (1)
drive-truck truck6 city3-2 city3-3 city3 (1)
unload-truck package5 truck6 city3-3 (1)
drive-truck truck3 city1-3 city1-1 city1 (1)
load-truck package3 truck3 city1-1 (1)
drive-truck truck3 city1-1 city1-3 city1 (1)
unload-truck package3 truck3 city1-3 (1)
load-truck package2 truck12 city5-2 (1)
drive-truck truck12 city5-2 city5-1 city5 (1)
load-truck package4 truck12 city5-1 (1)
drive-truck truck12 city5-1 city5-3 city5 (1)
unload-truck package4 truck12 city5-3 (1)
unload-truck package2 truck12 city5-3 (1)
load-airplane package5 plane1 city3-3 (1)
fly-airplane plane1 city3-3 city1-3 (1)
load-airplane package3 plane1 city1-3 (1)
fly-airplane plane1 city1-3 city2-3 (1)
load-airplane package1 plane1 city2-3 (1)
fly-airplane plane1 city2-3 city6-3 (1)
unload-airplane package5 plane1 city6-3 (1)
unload-airplane package1 plane1 city6-3 (1)
fly-airplane plane1 city6-3 city5-3 (1)
load-airplane package2 plane1 city5-3 (1)
fly-airplane plane1 city5-3 city4-3 (1)
unload-airplane package2 plane1 city4-3 (1)
fly-airplane plane1 city4-3 city8-3 (1)
unload-airplane package3 plane1 city8-3 (1)
[t=0.017463s, 11408 KB] Plan length: 30 step(s).
[t=0.017463s, 11408 KB] Plan cost: 30
[t=0.017463s, 11408 KB] Expanded 31 state(s).
[t=0.017463s, 11408 KB] Reopened 0 state(s).
[t=0.017463s, 11408 KB] Evaluated 1185 state(s).
[t=0.017463s, 11408 KB] Evaluations: 1185
[t=0.017463s, 11408 KB] Generated 1261 state(s).
[t=0.017463s, 11408 KB] Dead ends: 0 state(s).
[t=0.017463s, 11408 KB] Number of registered states: 1185
[t=0.017463s, 11408 KB] Int hash set load factor: 1185/2048 = 0.578613
[t=0.017463s, 11408 KB] Int hash set resizes: 11
[t=0.017463s, 11408 KB] Search time: 0.007160s
[t=0.017463s, 11408 KB] Total time: 0.017463s
Solution found.
Peak memory: 11408 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.37s
